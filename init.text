title: Sistemi di Avvio
author: Andrea Brancaleoni

## Cos'è un Sistema di Avvio

Il compito di avviare e riavviare il computer è svolto da uno speciale componente chiamato *init*. *Init* è responsabile di terminare l'avvio dopo che il kernel è stato caricato.

*Init* Avvia altri programmi detti Demoni. Ad esempio avvia il server grafico in un sistema Desktop o un server SQL o HTTP in sistemi Server.

## Affidabilità

L'affidabilità e la sicurezza è molto importante per un demone di init dato che:

- Gira in modalità super utente.
- É responsabile di controllare servizi di sistema critici.
- Se init muore per qualsiasi ragione, il kernel va in panic.

Il sistema di init non deve essere compromesso, dato che se fallisce, il kernel va in panic. Dunque, tutte le funzionalità che non sono considerate "core" devono essere tolte e messe negli altri demoni.

## Recall: Demone

"I demoni sono personaggi della mitologia greca, alcuni dei quali eseguivano compiti di cui gli dei non potevano occuparsi" - Wikipedia

## Linea Evolutiva

- Sistemi di avvio sequenziali: sistemi di avvio in cui ogni demone è avviato in sequenza.
appartengono a questa famiglia tutti i primi sistemi di avvio dove o non si era in possesso di architetture multicore/manycore o non era necessario accendere/spegnere la macchina in continuazione ma era più importante l'uptime. (EG. System-V init, BSD-Style init)
- Sistemi di avvio gerarchici: evoluzione dei sistemi di avvio sequenziali forniscono parallelismo all'avvio inizializzando contemporaneamente servizi tra loro indipendenti. (EG: OpenRC, InitNG)
- Sistemi di avvio Startless/Event Based: spesso forniscono funzionalità simili ai sistemi di avvio gerarchico, tuttavia il loro funzionamento interno è diverso. (EG: LaunchD, Upstart, SystemD)

## Linea Evolutive

![Linee Evolutive](timeline.png)

## System-V init

System-V init è lo standard per quanto riguarda i sistemi di avvio su Linux, comprese le alternative completamente compatibili (e ovviamente su System-V). In questo senso è anche il sistema di avvio più diffuso. Il suo ruolo principlae è di creare processi da uno script in /etc/inittab.

SYSVINIT, L'implementazione più famosa, contiene anche altri programmi che gestiscono l'avvio/il riavvio/lo spegnimento del computer. Ad esempio contiene:
- reboot
- shutdown
- killall
- poweroff
- tellinit
- sulogin
- wall
- etc.

## LaunchD

LaunchD è un framework open-source per gestire avvio e spegimento di altri demoni, applicazioni, processi e script. 
È stato scritto da Dave Zarzycki alla Apple, dove è stato introdotto, per la prima volta in Mac OS X Tiger, 
era licenziato sotto Apple Public License ma, per facilitarne l'adozione, la licenza fu cambiata con la Apache.

## Caratteristiche di LaunchD
LaunchD è essenzialmente un sostituto per:

- init
- rc
- init.d script
- rc.d script
- SystemStarter (Mac OS X)
- inetd / xinetd
- crond / atd
- watchdogd

## Upstart

Upstart è un sostituto *event-based* del demone di init. Fu originariamente sviluppato per Ubuntu, ma col tempo è stato adottato
da tutte le principali distribuzioni Desktop.

## Caratteristiche di Upstart

- I Task e i Servizi sono avviati e fermati tramite eventi
- Gli eventi vengono generati mentre i servizi vengono avviati e fermati
- Gli eventi possono essere ascoltati da qualsiasi altro processo nel sistema
- I servizi possono essere riavviati se muoiono inaspettatamente
- La comunicazione con il demone di init avviene attraverso D-BUS
- Servizi Utente, che gli utenti stessi possono avviare e stoppare

## SystemD

SystemD è un service manager per Linux, compatibile con SysV e gli init scripts LSB. SystemD fornisce parallelizzazione aggressiva, usa Socket
e D-Bus per avviare i servizi, offre avvio on-demand, tiene traccia dei processi attivi con i control groups (CGROUP), mantiene i punti di mount e
automount e e implementa un elaborata logica transazionale dependency based.

## Recall: The Commandment

Non avrai altro Dio al di fuori di me

## Caratteristiche di SystemD

- Parallelizzazione estrema
- Attivazione Socket Based (inetd)
- Bus Based Activation tramite D-BUS
- Caricamento On-Demand, anche di File-System (autofs)
- No Shell Scripts
- Monitoraggio attraverso Control Groups


## Parallelizzazione

![Parallelization](parallelization.png)

## Crash Course: SystemVinit



